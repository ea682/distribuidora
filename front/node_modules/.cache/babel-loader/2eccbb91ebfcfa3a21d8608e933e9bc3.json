{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erika\\\\Desktop\\\\proyectos\\\\Casa\\\\distribuidora\\\\front\\\\src\\\\Components\\\\Home\\\\Exportacion\\\\home.js\";\n\n/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport ventas from './ventas';\n\nclass home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.getOptions = this.getOptions.bind(this);\n  }\n\n  getOptions(e) {\n    for (let i = 0; i < e.length; i++) {\n      let codigo = e[i]['codigo'];\n\n      switch (codigo) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        default:\n          -1;\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      multiple: true,\n      id: \"tags-outlined\",\n      options: top100Films,\n      getOptionLabel: option => option.title,\n      filterSelectedOptions: true,\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        variant: \"outlined\",\n        label: \"Opciones\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      })),\n      onChange: (event, val) => this.getOptions(val),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default home; // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\nconst top100Films = [{\n  title: 'Ventas',\n  codigo: 0\n}, {\n  title: 'Venta de productos por fecha',\n  codigo: 1\n}, {\n  title: 'Ventas del vendedor',\n  codigo: 2\n}, {\n  title: 'Ventas del vendedor pagadas',\n  codigo: 3\n}, {\n  title: 'Ventas del vendedor inpagadas',\n  codigo: 4\n}, {\n  title: 'Ventas por producto',\n  codigo: 5\n}, {\n  title: 'Comisiones pagadas',\n  codigo: 6\n}, {\n  title: 'Resumen ventas',\n  codigo: 6\n}];","map":{"version":3,"sources":["C:/Users/erika/Desktop/proyectos/Casa/distribuidora/front/src/Components/Home/Exportacion/home.js"],"names":["React","Autocomplete","TextField","ventas","home","Component","constructor","props","state","getOptions","bind","e","i","length","codigo","render","top100Films","option","title","params","event","val"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAGA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAEA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDD,EAAAA,UAAU,CAACE,CAAD,EAAG;AACT,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,CAAC,CAACE,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AAC/B,UAAIE,MAAM,GAAGH,CAAC,CAACC,CAAD,CAAD,CAAK,QAAL,CAAb;;AACA,cAAOE,MAAP;AACI,aAAK,CAAL;AAEA,aAAK,CAAL;AACA,aAAK,CAAL;AACA,aAAK,CAAL;AACA,aAAK,CAAL;AACA,aAAK,CAAL;AACA,aAAK,CAAL;AACA;AACE,WAAC,CAAD;AAVN;AAYH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AACA,MAAA,QAAQ,MADR;AAEA,MAAA,EAAE,EAAC,eAFH;AAGA,MAAA,OAAO,EAAEC,WAHT;AAIA,MAAA,cAAc,EAAGC,MAAD,IAAYA,MAAM,CAACC,KAJnC;AAKA,MAAA,qBAAqB,MALrB;AAMA,MAAA,WAAW,EAAGC,MAAD,iBACb,oBAAC,SAAD,oBACQA,MADR;AAEI,QAAA,OAAO,EAAC,UAFZ;AAGI,QAAA,KAAK,EAAC,UAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAPA;AAaA,MAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,GAAR,KAAgB,KAAKZ,UAAL,CAAgBY,GAAhB,CAb1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBJ,CADJ;AAwBH;;AAnD8B;;AAsDnC,eAAejB,IAAf,C,CAEA;;AACA,MAAMY,WAAW,GAAG,CAClB;AAAEE,EAAAA,KAAK,EAAE,QAAT;AAAmBJ,EAAAA,MAAM,EAAE;AAA3B,CADkB,EAElB;AAAEI,EAAAA,KAAK,EAAE,8BAAT;AAAyCJ,EAAAA,MAAM,EAAE;AAAjD,CAFkB,EAGlB;AAAEI,EAAAA,KAAK,EAAE,qBAAT;AAAgCJ,EAAAA,MAAM,EAAE;AAAxC,CAHkB,EAIlB;AAAEI,EAAAA,KAAK,EAAE,6BAAT;AAAwCJ,EAAAA,MAAM,EAAE;AAAhD,CAJkB,EAKlB;AAAEI,EAAAA,KAAK,EAAE,+BAAT;AAA0CJ,EAAAA,MAAM,EAAE;AAAlD,CALkB,EAMlB;AAAEI,EAAAA,KAAK,EAAE,qBAAT;AAAgCJ,EAAAA,MAAM,EAAE;AAAxC,CANkB,EAOlB;AAAEI,EAAAA,KAAK,EAAE,oBAAT;AAA+BJ,EAAAA,MAAM,EAAE;AAAvC,CAPkB,EAQlB;AAAEI,EAAAA,KAAK,EAAE,gBAAT;AAA2BJ,EAAAA,MAAM,EAAE;AAAnC,CARkB,CAApB","sourcesContent":["/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nimport ventas from './ventas';\r\n\r\nclass home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n        }\r\n        this.getOptions = this.getOptions.bind(this);\r\n    }\r\n    \r\n    getOptions(e){\r\n        for (let i = 0; i < e.length; i++) {\r\n            let codigo = e[i]['codigo'];\r\n            switch(codigo) {\r\n                case 0:\r\n                    \r\n                case 1:\r\n                case 2:\r\n                case 3:\r\n                case 4:\r\n                case 5:\r\n                case 6:\r\n                default:\r\n                  -1\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-page\">\r\n                <div>\r\n                    <Autocomplete\r\n                    multiple\r\n                    id=\"tags-outlined\"\r\n                    options={top100Films}\r\n                    getOptionLabel={(option) => option.title}\r\n                    filterSelectedOptions\r\n                    renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        variant=\"outlined\"\r\n                        label=\"Opciones\"\r\n                    />\r\n                    )}\r\n                    onChange={(event, val) => this.getOptions(val)}\r\n                    />\r\n                </div>\r\n                <div>\r\n\r\n                </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default home;\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst top100Films = [\r\n  { title: 'Ventas', codigo: 0 },\r\n  { title: 'Venta de productos por fecha', codigo: 1 },\r\n  { title: 'Ventas del vendedor', codigo: 2 },\r\n  { title: 'Ventas del vendedor pagadas', codigo: 3 },\r\n  { title: 'Ventas del vendedor inpagadas', codigo: 4 },\r\n  { title: 'Ventas por producto', codigo: 5 },\r\n  { title: 'Comisiones pagadas', codigo: 6 },\r\n  { title: 'Resumen ventas', codigo: 6 },\r\n];\r\n"]},"metadata":{},"sourceType":"module"}