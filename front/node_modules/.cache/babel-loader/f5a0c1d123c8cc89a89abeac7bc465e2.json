{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erika\\\\Desktop\\\\proyectos\\\\Casa\\\\distribuidora\\\\front\\\\src\\\\Components\\\\Home\\\\Exportacion\\\\home.js\";\n\n/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Ventas from './ventas';\n\nclass home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cpVentas: null\n    };\n    this.getOptions = this.getOptions.bind(this);\n  }\n\n  viewVentas() {\n    ReactDOM.render( /*#__PURE__*/React.createElement(Ventas, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }), document.getElementById('ventas'));\n  }\n\n  getOptions(e) {\n    console.log(e);\n    let arrayComponentes = ['cpVentas', 'cpVentaProductos', 'cpVentaVendedor', 'cpVentaVendedorPagadas', 'cpVentaVendedorInpagadas', 'cpVentaProducto', 'cpComisionPagadas', 'cpResuemenVentas'];\n\n    for (let i = 0; i <= 7; i++) {\n      //let codigo = e[i]['codigo'];\n      //if(arrayComponentes.indexOf(e))\n      console.log(arrayComponentes.indexOf(e));\n    }\n    /*e.forEach(element => {\r\n        console.log(element);\r\n    });*/\n\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      multiple: true,\n      id: \"tags-outlined\",\n      options: top100Films,\n      getOptionLabel: option => option.title,\n      filterSelectedOptions: true,\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        variant: \"outlined\",\n        label: \"Opciones\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      })),\n      onChange: (event, val) => this.getOptions(val),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"ventas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, this.state.cpVentas ? /*#__PURE__*/React.createElement(Ventas, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 48\n      }\n    }) : null));\n  }\n\n}\n\nexport default home; // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\nconst top100Films = [{\n  title: 'Ventas',\n  codigo: 0,\n  codigoCp: 'cpVentas'\n}, {\n  title: 'Venta de productos por fecha',\n  codigo: 1,\n  codigoCp: 'cpVentaProductos'\n}, {\n  title: 'Ventas del vendedor',\n  codigo: 2,\n  codigoCp: 'cpVentaVendedor'\n}, {\n  title: 'Ventas del vendedor pagadas',\n  codigo: 3,\n  codigoCp: 'cpVentaVendedorPagadas'\n}, {\n  title: 'Ventas del vendedor inpagadas',\n  codigo: 4,\n  codigoCp: 'cpVentaVendedorInpagadas'\n}, {\n  title: 'Ventas por producto',\n  codigo: 5,\n  codigoCp: 'cpVentaProducto'\n}, {\n  title: 'Comisiones pagadas',\n  codigo: 6,\n  codigoCp: 'cpComisionPagadas'\n}, {\n  title: 'Resumen ventas',\n  codigo: 6,\n  codigoCp: 'cpResuemenVentas'\n}];","map":{"version":3,"sources":["C:/Users/erika/Desktop/proyectos/Casa/distribuidora/front/src/Components/Home/Exportacion/home.js"],"names":["React","ReactDOM","Autocomplete","TextField","Ventas","home","Component","constructor","props","state","cpVentas","getOptions","bind","viewVentas","render","document","getElementById","e","console","log","arrayComponentes","i","indexOf","top100Films","option","title","params","event","val","codigo","codigoCp"],"mappings":"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","sourcesContent":["/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nimport Ventas from './ventas';\r\n\r\nclass home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            cpVentas : null\r\n        }\r\n        this.getOptions = this.getOptions.bind(this);\r\n    }\r\n    \r\n\r\n    viewVentas(){\r\n        ReactDOM.render(\r\n            <Ventas/>,\r\n            document.getElementById('ventas')\r\n        );\r\n    }\r\n\r\n    getOptions(e){\r\n        console.log(e);\r\n        let arrayComponentes = ['cpVentas', 'cpVentaProductos', 'cpVentaVendedor', 'cpVentaVendedorPagadas', 'cpVentaVendedorInpagadas', 'cpVentaProducto', 'cpComisionPagadas', 'cpResuemenVentas'];\r\n        for (let i = 0; i <= 7; i++) {\r\n            //let codigo = e[i]['codigo'];\r\n            //if(arrayComponentes.indexOf(e))\r\n            console.log(arrayComponentes.indexOf(e));\r\n        }\r\n\r\n        /*e.forEach(element => {\r\n            console.log(element);\r\n        });*/\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-page\">\r\n                <div>\r\n                    <Autocomplete\r\n                    multiple\r\n                    id=\"tags-outlined\"\r\n                    options={top100Films}\r\n                    getOptionLabel={(option) => option.title}\r\n                    filterSelectedOptions\r\n                    renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        variant=\"outlined\"\r\n                        label=\"Opciones\"\r\n                    />\r\n                    )}\r\n                    onChange={(event, val) => this.getOptions(val)}\r\n                    />\r\n                </div>\r\n                <div id=\"ventas\">\r\n                        {this.state.cpVentas ? <Ventas/> : null}\r\n                </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default home;\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst top100Films = [\r\n  { title: 'Ventas', codigo: 0, codigoCp : 'cpVentas' },\r\n  { title: 'Venta de productos por fecha', codigo: 1, codigoCp : 'cpVentaProductos'},\r\n  { title: 'Ventas del vendedor', codigo: 2, codigoCp : 'cpVentaVendedor'},\r\n  { title: 'Ventas del vendedor pagadas', codigo: 3, codigoCp : 'cpVentaVendedorPagadas'},\r\n  { title: 'Ventas del vendedor inpagadas', codigo: 4, codigoCp : 'cpVentaVendedorInpagadas'},\r\n  { title: 'Ventas por producto', codigo: 5, codigoCp : 'cpVentaProducto'},\r\n  { title: 'Comisiones pagadas', codigo: 6, codigoCp : 'cpComisionPagadas'},\r\n  { title: 'Resumen ventas', codigo: 6, codigoCp : 'cpResuemenVentas'}\r\n];\r\n"]},"metadata":{},"sourceType":"module"}