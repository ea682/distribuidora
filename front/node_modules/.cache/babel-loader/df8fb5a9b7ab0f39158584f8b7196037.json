{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erika\\\\Desktop\\\\proyectos\\\\Casa\\\\distribuidora\\\\front\\\\src\\\\Components\\\\Home\\\\Exportacion\\\\home.js\";\n\n/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Ventas from './ventas';\n\nclass home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cpVentas: null,\n      cpVentaProductos: null,\n      cpVentaVendedor: null,\n      cpVentaVendedorPagadas: null,\n      cpVentaVendedorInpagadas: null,\n      cpVentaProducto: null,\n      cpComisionPagadas: null,\n      cpResuemenVentas: null\n    };\n    this.getOptions = this.getOptions.bind(this);\n  }\n\n  viewVentas() {\n    ReactDOM.render( /*#__PURE__*/React.createElement(Ventas, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }), document.getElementById('ventas'));\n  } //Mostramos los componentes que cumplan con la condicion.\n\n\n  viewComponentes(codigo) {\n    if (codigo === 0) {\n      this.setState({\n        cpVentas: true\n      });\n    }\n\n    if (codigo === 1) {\n      this.setState({\n        cpVentaProductos: true\n      });\n    }\n\n    if (codigo === 2) {\n      this.setState({\n        cpVentaVendedor: true\n      });\n    }\n\n    if (codigo === 3) {\n      this.setState({\n        cpVentaVendedorPagadas: true\n      });\n    }\n\n    if (codigo === 4) {\n      this.setState({\n        cpVentaVendedorInpagadas: true\n      });\n    }\n\n    if (codigo === 5) {\n      this.setState({\n        cpVentaProducto: true\n      });\n    }\n\n    if (codigo === 6) {\n      this.setState({\n        cpComisionPagadas: true\n      });\n    }\n\n    if (codigo === 7) {\n      this.setState({\n        cpResuemenVentas: true\n      });\n    }\n  } //Ocultamos o no mostramos los componentes que no se soliciten.\n\n\n  ocultarComponentes() {\n    if (codigo === 0) {\n      this.setState({\n        cpVentas: true\n      });\n    }\n\n    if (codigo === 1) {\n      this.setState({\n        cpVentaProductos: true\n      });\n    }\n\n    if (codigo === 2) {\n      this.setState({\n        cpVentaVendedor: true\n      });\n    }\n\n    if (codigo === 3) {\n      this.setState({\n        cpVentaVendedorPagadas: true\n      });\n    }\n\n    if (codigo === 4) {\n      this.setState({\n        cpVentaVendedorInpagadas: true\n      });\n    }\n\n    if (codigo === 5) {\n      this.setState({\n        cpVentaProducto: true\n      });\n    }\n\n    if (codigo === 6) {\n      this.setState({\n        cpComisionPagadas: true\n      });\n    }\n\n    if (codigo === 7) {\n      this.setState({\n        cpResuemenVentas: true\n      });\n    }\n  }\n\n  getOptions(e) {\n    let cpCodigoAdd = [];\n    e.forEach(element => {\n      cpCodigoAdd.push(element.codigo);\n    });\n\n    for (let i = 0; i <= 7; i++) {\n      //let codigo = e[i]['codigo'];\n      if (cpCodigoAdd.indexOf(i) >= 0) {} else {}\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      multiple: true,\n      id: \"tags-outlined\",\n      options: top100Films,\n      getOptionLabel: option => option.title,\n      filterSelectedOptions: true,\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        variant: \"outlined\",\n        label: \"Opciones\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      })),\n      onChange: (event, val) => this.getOptions(val),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"ventas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, this.state.cpVentas ? /*#__PURE__*/React.createElement(Ventas, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 48\n      }\n    }) : null));\n  }\n\n}\n\nexport default home; // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\nconst top100Films = [{\n  title: 'Ventas',\n  codigo: 0,\n  codigoCp: 'cpVentas'\n}, {\n  title: 'Venta de productos por fecha',\n  codigo: 1,\n  codigoCp: 'cpVentaProductos'\n}, {\n  title: 'Ventas del vendedor',\n  codigo: 2,\n  codigoCp: 'cpVentaVendedor'\n}, {\n  title: 'Ventas del vendedor pagadas',\n  codigo: 3,\n  codigoCp: 'cpVentaVendedorPagadas'\n}, {\n  title: 'Ventas del vendedor inpagadas',\n  codigo: 4,\n  codigoCp: 'cpVentaVendedorInpagadas'\n}, {\n  title: 'Ventas por producto',\n  codigo: 5,\n  codigoCp: 'cpVentaProducto'\n}, {\n  title: 'Comisiones pagadas',\n  codigo: 6,\n  codigoCp: 'cpComisionPagadas'\n}, {\n  title: 'Resumen ventas',\n  codigo: 6,\n  codigoCp: 'cpResuemenVentas'\n}];","map":{"version":3,"sources":["C:/Users/erika/Desktop/proyectos/Casa/distribuidora/front/src/Components/Home/Exportacion/home.js"],"names":["React","ReactDOM","Autocomplete","TextField","Ventas","home","Component","constructor","props","state","cpVentas","cpVentaProductos","cpVentaVendedor","cpVentaVendedorPagadas","cpVentaVendedorInpagadas","cpVentaProducto","cpComisionPagadas","cpResuemenVentas","getOptions","bind","viewVentas","render","document","getElementById","viewComponentes","codigo","setState","ocultarComponentes","e","cpCodigoAdd","forEach","element","push","i","indexOf","top100Films","option","title","params","event","val","codigoCp"],"mappings":"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","sourcesContent":["/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nimport Ventas from './ventas';\r\n\r\nclass home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            cpVentas : null,\r\n            cpVentaProductos : null,\r\n            cpVentaVendedor : null,\r\n            cpVentaVendedorPagadas : null,\r\n            cpVentaVendedorInpagadas : null,\r\n            cpVentaProducto : null,\r\n            cpComisionPagadas : null,\r\n            cpResuemenVentas : null\r\n        }\r\n        this.getOptions = this.getOptions.bind(this);\r\n    }\r\n    \r\n\r\n    viewVentas(){\r\n        ReactDOM.render(\r\n            <Ventas/>,\r\n            document.getElementById('ventas')\r\n        );\r\n    }\r\n\r\n    //Mostramos los componentes que cumplan con la condicion.\r\n    viewComponentes(codigo){\r\n        if(codigo === 0){\r\n            this.setState({ cpVentas : true});\r\n        }\r\n        if(codigo === 1){\r\n            this.setState({ cpVentaProductos : true});\r\n        }\r\n        if(codigo === 2){\r\n            this.setState({ cpVentaVendedor : true});\r\n        }\r\n        if(codigo === 3){\r\n            this.setState({ cpVentaVendedorPagadas : true});\r\n        }\r\n        if(codigo === 4){\r\n            this.setState({ cpVentaVendedorInpagadas : true});\r\n        }\r\n        if(codigo === 5){\r\n            this.setState({ cpVentaProducto : true});\r\n        }\r\n        if(codigo === 6){\r\n            this.setState({ cpComisionPagadas : true});\r\n        }\r\n        if(codigo === 7){\r\n            this.setState({ cpResuemenVentas : true});\r\n        }\r\n    }\r\n\r\n    //Ocultamos o no mostramos los componentes que no se soliciten.\r\n    ocultarComponentes(){\r\n        if(codigo === 0){\r\n            this.setState({ cpVentas : true});\r\n        }\r\n        if(codigo === 1){\r\n            this.setState({ cpVentaProductos : true});\r\n        }\r\n        if(codigo === 2){\r\n            this.setState({ cpVentaVendedor : true});\r\n        }\r\n        if(codigo === 3){\r\n            this.setState({ cpVentaVendedorPagadas : true});\r\n        }\r\n        if(codigo === 4){\r\n            this.setState({ cpVentaVendedorInpagadas : true});\r\n        }\r\n        if(codigo === 5){\r\n            this.setState({ cpVentaProducto : true});\r\n        }\r\n        if(codigo === 6){\r\n            this.setState({ cpComisionPagadas : true});\r\n        }\r\n        if(codigo === 7){\r\n            this.setState({ cpResuemenVentas : true});\r\n        }\r\n    }\r\n\r\n    getOptions(e){\r\n        let cpCodigoAdd = [];\r\n        e.forEach(element => {\r\n            cpCodigoAdd.push(element.codigo);\r\n        });\r\n\r\n        for (let i = 0; i <= 7; i++) {\r\n            //let codigo = e[i]['codigo'];\r\n            if(cpCodigoAdd.indexOf(i) >= 0){\r\n                \r\n            }else{\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-page\">\r\n                <div>\r\n                    <Autocomplete\r\n                    multiple\r\n                    id=\"tags-outlined\"\r\n                    options={top100Films}\r\n                    getOptionLabel={(option) => option.title}\r\n                    filterSelectedOptions\r\n                    renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        variant=\"outlined\"\r\n                        label=\"Opciones\"\r\n                    />\r\n                    )}\r\n                    onChange={(event, val) => this.getOptions(val)}\r\n                    />\r\n                </div>\r\n                <div id=\"ventas\">\r\n                        {this.state.cpVentas ? <Ventas/> : null}\r\n                </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default home;\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst top100Films = [\r\n  { title: 'Ventas', codigo: 0, codigoCp : 'cpVentas' },\r\n  { title: 'Venta de productos por fecha', codigo: 1, codigoCp : 'cpVentaProductos'},\r\n  { title: 'Ventas del vendedor', codigo: 2, codigoCp : 'cpVentaVendedor'},\r\n  { title: 'Ventas del vendedor pagadas', codigo: 3, codigoCp : 'cpVentaVendedorPagadas'},\r\n  { title: 'Ventas del vendedor inpagadas', codigo: 4, codigoCp : 'cpVentaVendedorInpagadas'},\r\n  { title: 'Ventas por producto', codigo: 5, codigoCp : 'cpVentaProducto'},\r\n  { title: 'Comisiones pagadas', codigo: 6, codigoCp : 'cpComisionPagadas'},\r\n  { title: 'Resumen ventas', codigo: 6, codigoCp : 'cpResuemenVentas'}\r\n];\r\n"]},"metadata":{},"sourceType":"module"}