{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erika\\\\Desktop\\\\proyectos\\\\Casa\\\\distribuidora\\\\front\\\\src\\\\Components\\\\Home\\\\Exportacion\\\\exportacion.js\";\nimport React from \"react\";\nimport api from '../../config/Api';\nimport \"react-tabulator/lib/css/bootstrap/tabulator_bootstrap.min.css\";\nimport { React15Tabulator } from \"react-tabulator\";\nimport axios from 'axios';\nconst data = [];\n\nclass ListaPagos extends React.Component {\n  constructor(props) {\n    super(props);\n    this.consultaVentas = this.consultaVentas.bind(this);\n    this.state = {\n      data: '',\n      inicio: null,\n      final: null\n    };\n  }\n\n  change(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  } //Cargamos los datos de la tabla.\n\n\n  componentDidMount() {} //Insertamos los datos.\n\n\n  consultaVentas() {\n    let inicio = this.state.inicio;\n    let final = this.state.final;\n    const data = 1;\n    this.setState({\n      data\n    }); //Realizamos la consulta con las fehcas\n\n    axios.post(`${api}/api/informes/ventas/${inicio}/${final}`).then(res => {\n      if (res.status === 200) {\n        let dataVentas = res.data.ventas;\n        let newArrayDatos = [];\n\n        for (let i = 0; i < dataVentas.length; i++) {\n          console.log(dataVentas[i]);\n          newArrayDatos.push(dataVentas[i]['fechaDocumento']);\n          newArrayDatos.push(dataVentas[i]['numeroFactura']);\n          newArrayDatos.push(dataVentas[i]['nombreCliente']);\n          newArrayDatos.push(dataVentas[i]['nombreCliente']);\n          newArrayDatos.push(dataVentas[i]['codigo']);\n          newArrayDatos.push(dataVentas[i]['rut']);\n          newArrayDatos.push(dataVentas[i]['total']);\n          newArrayDatos.push(dataVentas[i]['IVA']);\n          newArrayDatos.push(dataVentas[i]['total']);\n          newArrayDatos.push(dataVentas[i]['totalNeto']);\n        }\n\n        this.setState({\n          data: res.data.ventas\n        });\n      } else {}\n    });\n  }\n\n  render() {\n    let filteredData = this.state.data; //Agregamos las columnas a la tabla.\n\n    const columns = [{\n      title: \"Fecha Ingreso\",\n      field: \"fechaDocumento\",\n      width: \"9%\",\n      headerFilter: \"input\"\n    }, {\n      title: \"Monto\",\n      field: \"monto\",\n      width: \"15%\",\n      editor: true,\n      headerFilter: \"input\"\n    }, {\n      title: \"Tipo documento\",\n      field: \"IdTipoDocumentoPago\",\n      width: \"15%\",\n      editor: true,\n      headerFilter: \"input\"\n    }]; //Opciones de data table\n\n    const options = {\n      layout: \"id\",\n      width: \"100%\",\n      pagination: \"local\",\n      paginationSize: 30,\n      movableColumns: true,\n      persistence: {\n        sort: true,\n        filter: true,\n        columns: true\n      },\n      persistenceID: \"dataSave\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, \"Fecha de Inico\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.change(e),\n      className: \"form-control\",\n      type: \"date\",\n      name: \"inicio\",\n      value: this.state.ciudad,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, \"Fecha de vencimiento\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.change(e),\n      className: \"form-control\",\n      type: \"date\",\n      name: \"final\",\n      value: this.state.ciudad,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.consultaVentas,\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, \" Guardar \"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(React15Tabulator, {\n      columns: columns,\n      data: filteredData,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nexport default ListaPagos;","map":{"version":3,"sources":["C:/Users/erika/Desktop/proyectos/Casa/distribuidora/front/src/Components/Home/Exportacion/exportacion.js"],"names":["React","api","React15Tabulator","axios","data","ListaPagos","Component","constructor","props","consultaVentas","bind","state","inicio","final","change","e","setState","target","name","value","componentDidMount","post","then","res","status","dataVentas","ventas","newArrayDatos","i","length","console","log","push","render","filteredData","columns","title","field","width","headerFilter","editor","options","layout","pagination","paginationSize","movableColumns","persistence","sort","filter","persistenceID","ciudad"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport api from '../../config/Api';\r\nimport \"react-tabulator/lib/css/bootstrap/tabulator_bootstrap.min.css\";\r\nimport { React15Tabulator } from \"react-tabulator\";\r\nimport axios from 'axios';\r\n\r\n\r\nconst data = [];\r\nclass ListaPagos extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.consultaVentas = this.consultaVentas.bind(this);\r\n    this.state = { \r\n        data: '',\r\n        inicio : null,\r\n        final : null\r\n    }\r\n  }\r\n\r\n  change(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  //Cargamos los datos de la tabla.\r\n  componentDidMount(){\r\n  }\r\n\r\n  //Insertamos los datos.\r\n  consultaVentas(){\r\n    let inicio = this.state.inicio;\r\n    let final = this.state.final;\r\n\r\n    const data = 1\r\n    this.setState({ data });\r\n\r\n    //Realizamos la consulta con las fehcas\r\n    axios.post(`${api}/api/informes/ventas/${inicio}/${final}`)\r\n    .then(res => {\r\n        if(res.status === 200){\r\n            let dataVentas = res.data.ventas;\r\n            let newArrayDatos = [];\r\n            for (let i = 0; i < dataVentas.length; i++) {\r\n              console.log(dataVentas[i]);\r\n              newArrayDatos.push(dataVentas[i]['fechaDocumento']);\r\n              newArrayDatos.push(dataVentas[i]['numeroFactura']);\r\n              newArrayDatos.push(dataVentas[i]['nombreCliente']);\r\n              newArrayDatos.push(dataVentas[i]['nombreCliente']);\r\n              newArrayDatos.push(dataVentas[i]['codigo']);\r\n              newArrayDatos.push(dataVentas[i]['rut']);\r\n              newArrayDatos.push(dataVentas[i]['total']);\r\n              newArrayDatos.push(dataVentas[i]['IVA']);\r\n              newArrayDatos.push(dataVentas[i]['total']);\r\n              newArrayDatos.push(dataVentas[i]['totalNeto']);\r\n            }\r\n            this.setState({ data : res.data.ventas })\r\n        }else{\r\n            \r\n        }\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    let filteredData = this.state.data;\r\n\r\n    //Agregamos las columnas a la tabla.\r\n    const columns = [\r\n      { title: \"Fecha Ingreso\", field: \"fechaDocumento\", width: \"9%\", headerFilter:\"input\"},\r\n      { title: \"Monto\", field: \"monto\", width: \"15%\", editor:true, headerFilter:\"input\"},\r\n      { title: \"Tipo documento\", field: \"IdTipoDocumentoPago\", width: \"15%\", editor:true, headerFilter:\"input\"}\r\n    ];\r\n    //Opciones de data table\r\n    const options = {\r\n      layout:\"id\",\r\n      width: \"100%\",\r\n      pagination:\"local\",\r\n      paginationSize:30,\r\n      movableColumns:true,\r\n      persistence:{\r\n        sort:true,\r\n        filter:true,\r\n        columns:true,\r\n      },\r\n      persistenceID:\"dataSave\"\r\n    };\r\n    return (\r\n        <div className=\"form-page\">\r\n            <div className = 'form-group'>\r\n                <div className = 'form-group'>\r\n                    <label>Fecha de Inico</label>\r\n                    <input onChange={e => this.change(e)} className= 'form-control' type = 'date' name='inicio' value= {this.state.ciudad}  />\r\n                </div>\r\n                <div className = 'form-group'>\r\n                    <label>Fecha de vencimiento</label>\r\n                    <input onChange={e => this.change(e)} className= 'form-control' type = 'date' name='final' value= {this.state.ciudad}  />\r\n                </div>\r\n                <div>\r\n                <button type = 'button' onClick ={this.consultaVentas} className = 'btn btn-primary'> Guardar </button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <React15Tabulator columns={columns} data={filteredData} options={options}/>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListaPagos;"]},"metadata":{},"sourceType":"module"}