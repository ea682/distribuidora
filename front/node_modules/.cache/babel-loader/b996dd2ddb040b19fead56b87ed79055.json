{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erika\\\\Desktop\\\\proyectos\\\\Casa\\\\distribuidora\\\\front\\\\src\\\\Components\\\\Home\\\\Cliente\\\\ListCliente.js\";\nimport React from \"react\";\nimport api from '../../config/Api'; // import \"react-tabulator/lib/styles.css\"; // default theme\n\nimport \"react-tabulator/lib/css/bootstrap/tabulator_bootstrap.min.css\"; // use Theme(s)\n\nimport { React15Tabulator } from \"react-tabulator\"; // for React 15.x\n\nimport './clientes.css';\n\nclass ListClientes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: ''\n    };\n  } //Cargamos los datos de la tabla.\n\n\n  componentDidMount() {\n    fetch(api + '/api/clientes/getTablaCliente').then(response => {\n      return response.json();\n    }).then(datos => {\n      datos = datos.clientes;\n      let row = [];\n\n      for (let i = 0; i < datos.length; i++) {\n        //Guardamos los datos en un array\n        row.push({\n          id: datos[i]['id'],\n          rut: datos[i]['rut'],\n          nombreCliente: datos[i]['nombreCliente'],\n          direccion: datos[i]['direccion'],\n          telefono: datos[i]['telefono'],\n          giro: datos[i]['giro']\n        });\n      }\n\n      this.setState({\n        data: row\n      });\n    });\n  }\n\n  test(e) {\n    alert(e);\n  }\n\n  render() {\n    //Agregamos las columnas a la tabla.\n    const columns = [{\n      title: \"Acciones\",\n      field: \"id\",\n      width: \"15%\",\n      align: \"center\",\n      formatter: function (cell) {\n        let value = cell.getValue();\n        console.log(value);\n        return \"<button  type='button' class='btn btn-danger btn-sm'>Eliminar</button>  <button  type='button' class='btn btn-success btn-sm'>Guardar</button>\";\n      }\n    }, {\n      title: \"RUT\",\n      field: \"rut\",\n      color: \"red\",\n      editor: true,\n      headerFilter: \"input\"\n    }, {\n      title: \"Nombre Cliente\",\n      field: \"nombreCliente\",\n      editor: true,\n      headerFilter: \"input\"\n    }, {\n      title: \"Direccion\",\n      field: \"direccion\",\n      editor: true,\n      headerFilter: \"input\"\n    }, {\n      title: \"Telefono\",\n      field: \"telefono\",\n      editor: true\n    }, {\n      title: \"Giro\",\n      field: \"giro\",\n      editor: true,\n      headerFilter: \"input\"\n    }]; //Opciones de data table\n\n    const options = {\n      layout: \"fitColumns\",\n      pagination: \"local\",\n      paginationSize: 10,\n      movableColumns: true,\n      responsiveLayout: \"hide\",\n      persistence: {\n        sort: true,\n        filter: true,\n        columns: true\n      },\n      persistenceID: \"dataSave\",\n      onChange: this.test\n    };\n\n    try {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(React15Tabulator, {\n        columns: columns,\n        data: this.state.data,\n        options: options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }));\n    } catch (error) {}\n  }\n\n}\n\nexport default ListClientes;","map":{"version":3,"sources":["C:/Users/erika/Desktop/proyectos/Casa/distribuidora/front/src/Components/Home/Cliente/ListCliente.js"],"names":["React","api","React15Tabulator","ListClientes","Component","constructor","props","state","data","componentDidMount","fetch","then","response","json","datos","clientes","row","i","length","push","id","rut","nombreCliente","direccion","telefono","giro","setState","test","e","alert","render","columns","title","field","width","align","formatter","cell","value","getValue","console","log","color","editor","headerFilter","options","layout","pagination","paginationSize","movableColumns","responsiveLayout","persistence","sort","filter","persistenceID","onChange","error"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport api from '../../config/Api';\r\n// import \"react-tabulator/lib/styles.css\"; // default theme\r\nimport \"react-tabulator/lib/css/bootstrap/tabulator_bootstrap.min.css\"; // use Theme(s)\r\nimport { React15Tabulator } from \"react-tabulator\"; // for React 15.x\r\nimport './clientes.css';\r\n\r\n\r\n\r\n\r\nclass ListClientes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: ''}\r\n  }\r\n\r\n  //Cargamos los datos de la tabla.\r\n  componentDidMount(){\r\n    \r\n    fetch(api+'/api/clientes/getTablaCliente')\r\n      .then((response) => {\r\n        return response.json()\r\n      })\r\n      .then((datos) => {\r\n        datos = datos.clientes;\r\n        let row = [];\r\n        for (let i = 0; i < datos.length; i++) {\r\n            //Guardamos los datos en un array\r\n            row.push({ \r\n                id: datos[i]['id'],\r\n                rut: datos[i]['rut'],\r\n                nombreCliente: datos[i]['nombreCliente'],\r\n                direccion: datos[i]['direccion'],\r\n                telefono: datos[i]['telefono'],\r\n                giro: datos[i]['giro']\r\n            });\r\n        }\r\n        this.setState({ data: row })\r\n      });\r\n    \r\n  }\r\n\r\n  test(e){\r\n    alert(e);\r\n  }\r\n\r\n\r\n  render() {\r\n    //Agregamos las columnas a la tabla.\r\n    const columns = [\r\n      { title: \"Acciones\", field: \"id\", width: \"15%\", align:\"center\", formatter:function(cell){\r\n        let value = cell.getValue();\r\n        console.log(value);\r\n        return \"<button  type='button' class='btn btn-danger btn-sm'>Eliminar</button>  <button  type='button' class='btn btn-success btn-sm'>Guardar</button>\";\r\n      }},\r\n      { title: \"RUT\", field: \"rut\", color: \"red\", editor:true, headerFilter:\"input\"},\r\n      { title: \"Nombre Cliente\", field: \"nombreCliente\", editor:true, headerFilter:\"input\"},\r\n      { title: \"Direccion\", field: \"direccion\", editor:true, headerFilter:\"input\"},\r\n      { title: \"Telefono\", field: \"telefono\", editor:true},\r\n      { title: \"Giro\", field: \"giro\", editor:true, headerFilter:\"input\"}\r\n    ];\r\n    //Opciones de data table\r\n    const options = {\r\n      layout:\"fitColumns\",\r\n      pagination:\"local\",\r\n      paginationSize:10,\r\n      movableColumns:true,\r\n      responsiveLayout:\"hide\",\r\n      persistence:{\r\n        sort:true,\r\n        filter:true,\r\n        columns:true,\r\n      },\r\n      persistenceID:\"dataSave\",\r\n      onChange: this.test\r\n    };\r\n    try {\r\n      return (\r\n        <div>\r\n          <React15Tabulator columns={columns} data={this.state.data} options={options}/>\r\n        </div>\r\n      );\r\n    } catch (error) {\r\n    }\r\n  }\r\n}\r\n\r\nexport default ListClientes;\r\n"]},"metadata":{},"sourceType":"module"}