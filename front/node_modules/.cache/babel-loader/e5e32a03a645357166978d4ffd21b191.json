{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erika\\\\Desktop\\\\proyectos\\\\Casa\\\\distribuidora\\\\front\\\\src\\\\Components\\\\Home\\\\Exportacion\\\\exportacion.js\";\nimport React from \"react\";\nimport api from '../../config/Api';\nimport \"react-tabulator/lib/css/bootstrap/tabulator_bootstrap.min.css\";\nimport { React15Tabulator } from \"react-tabulator\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport ExcelDownload from './exportExcel';\n\nfunction exExcelTes(title, dataExcel) {\n  console.log(title);\n  console.log(dataExcel); //return <ExcelDownload titulos={this.state.titulos} datos={this.state.dataExcel}/>\n}\n\nconst data = [];\n\nclass ListaPagos extends React.Component {\n  constructor(props) {\n    super(props);\n    this.consultaVentas = this.consultaVentas.bind(this);\n    this.state = {\n      data: '',\n      dataExcel: '',\n      inicio: null,\n      final: null,\n      titulos: '',\n      isExcel: null\n    };\n  }\n\n  change(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  } //Cargamos los datos de la tabla.\n\n\n  componentDidMount() {} //Insertamos los datos.\n\n\n  consultaVentas() {\n    let inicio = this.state.inicio;\n    let final = this.state.final;\n    const data = 1;\n    this.setState({\n      data\n    }); //Realizamos la consulta con las fehcas\n\n    axios.post(`${api}/api/informes/ventas/${inicio}/${final}`).then(res => {\n      if (res.status === 200) {\n        let dataVentas = res.data.ventas;\n        let newArrayDatosGrilla = [];\n        let arrayTitulos = ['Fecha Documento', 'N Factura', 'Nombre Cliente', 'Tipo Factura', 'Codigo', 'Rut', 'Total Neto', 'IVA', 'Total'];\n\n        for (let i = 0; i < dataVentas.length; i++) {\n          let newFecha = new Date(dataVentas[i]['fechaDocumento']);\n          newFecha = moment(newFecha).format('DD/MM/YYYY');\n          newArrayDatosGrilla.push({\n            fechaDocumento: newFecha,\n            numeroFactura: dataVentas[i]['numeroFactura'],\n            nombreCliente: dataVentas[i]['nombreCliente'],\n            nombreTipoFactura: dataVentas[i]['nombreTipoFactura'],\n            codigo: dataVentas[i]['codigo'],\n            rut: dataVentas[i]['rut'],\n            totalNeto: dataVentas[i]['totalNeto'],\n            IVA: dataVentas[i]['IVA'],\n            total: dataVentas[i]['total']\n          });\n          newArrayDatosExcel.push(newFecha);\n          newArrayDatosExcel.push(dataVentas[i]['numeroFactura']);\n          newArrayDatosExcel.push(dataVentas[i]['nombreCliente']);\n          newArrayDatosExcel.push(dataVentas[i]['nombreTipoFactura']);\n          newArrayDatosExcel.push(dataVentas[i]['codigo']);\n          newArrayDatosExcel.push(dataVentas[i]['rut']);\n          newArrayDatosExcel.push(dataVentas[i]['totalNeto']);\n          newArrayDatosExcel.push(dataVentas[i]['IVA']);\n          newArrayDatosExcel.push(dataVentas[i]['total']);\n        } //console.log(newArrayDatos);\n\n\n        this.setState({\n          titulos: arrayTitulos\n        });\n        this.setState({\n          data: newArrayDatosGrilla\n        });\n        this.setState({\n          dataExcel: newArrayDatosExcel\n        });\n        this.setState({\n          isExcel: true\n        });\n      } else {}\n    });\n  }\n\n  render() {\n    let filteredData = this.state.data; //Agregamos las columnas a la tabla.\n\n    const columns = [{\n      title: \"Fecha Documento\",\n      field: \"fechaDocumento\",\n      width: \"9%\"\n    }, {\n      title: \"N Factura\",\n      field: \"numeroFactura\",\n      width: \"15%\"\n    }, {\n      title: \"Nombre Cliente\",\n      field: \"nombreCliente\",\n      width: \"15%\"\n    }, {\n      title: \"Tipo Factura\",\n      field: \"nombreTipoFactura\",\n      width: \"15%\"\n    }, {\n      title: \"Codigo\",\n      field: \"codigo\",\n      width: \"15%\"\n    }, {\n      title: \"Rut\",\n      field: \"rut\",\n      width: \"15%\"\n    }, {\n      title: \"Total Neto\",\n      field: \"totalNeto\",\n      width: \"15%\"\n    }, {\n      title: \"IVA\",\n      field: \"IVA\",\n      width: \"15%\"\n    }, {\n      title: \"Total\",\n      field: \"total\",\n      width: \"15%\"\n    }]; //Opciones de data table\n\n    const options = {\n      layout: \"id\",\n      width: \"100%\",\n      pagination: \"local\",\n      paginationSize: 10,\n      movableColumns: true,\n      persistence: {\n        sort: true,\n        filter: true,\n        columns: true\n      },\n      persistenceID: \"dataSave\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, \"Fecha de Inico\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.change(e),\n      className: \"form-control\",\n      type: \"date\",\n      name: \"inicio\",\n      value: this.state.ciudad,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, \"Fecha de vencimiento\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.change(e),\n      className: \"form-control\",\n      type: \"date\",\n      name: \"final\",\n      value: this.state.ciudad,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.consultaVentas,\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, \" Guardar \"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(React15Tabulator, {\n      columns: columns,\n      data: filteredData,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: exExcelTes(this.state.titulos, this.state.dataExcel),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    })));\n  }\n\n}\n\nexport default ListaPagos;","map":{"version":3,"sources":["C:/Users/erika/Desktop/proyectos/Casa/distribuidora/front/src/Components/Home/Exportacion/exportacion.js"],"names":["React","api","React15Tabulator","axios","moment","ExcelDownload","exExcelTes","title","dataExcel","console","log","data","ListaPagos","Component","constructor","props","consultaVentas","bind","state","inicio","final","titulos","isExcel","change","e","setState","target","name","value","componentDidMount","post","then","res","status","dataVentas","ventas","newArrayDatosGrilla","arrayTitulos","i","length","newFecha","Date","format","push","fechaDocumento","numeroFactura","nombreCliente","nombreTipoFactura","codigo","rut","totalNeto","IVA","total","newArrayDatosExcel","render","filteredData","columns","field","width","options","layout","pagination","paginationSize","movableColumns","persistence","sort","filter","persistenceID","ciudad"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport api from '../../config/Api';\r\nimport \"react-tabulator/lib/css/bootstrap/tabulator_bootstrap.min.css\";\r\nimport { React15Tabulator } from \"react-tabulator\";\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nimport ExcelDownload from './exportExcel';\r\n\r\n\r\nfunction exExcelTes(title, dataExcel){\r\n    console.log(title);\r\n    console.log(dataExcel);\r\n    //return <ExcelDownload titulos={this.state.titulos} datos={this.state.dataExcel}/>\r\n}\r\n\r\nconst data = [];\r\nclass ListaPagos extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.consultaVentas = this.consultaVentas.bind(this);\r\n    this.state = { \r\n        data: '',\r\n        dataExcel: '',\r\n        inicio : null,\r\n        final : null,\r\n        titulos : '',\r\n        isExcel : null\r\n    }\r\n  }\r\n\r\n  change(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  //Cargamos los datos de la tabla.\r\n  componentDidMount(){\r\n  }\r\n\r\n  //Insertamos los datos.\r\n  consultaVentas(){\r\n    let inicio = this.state.inicio;\r\n    let final = this.state.final;\r\n\r\n    const data = 1\r\n    this.setState({ data });\r\n\r\n    //Realizamos la consulta con las fehcas\r\n    axios.post(`${api}/api/informes/ventas/${inicio}/${final}`)\r\n    .then(res => {\r\n        if(res.status === 200){\r\n            let dataVentas = res.data.ventas;\r\n            let newArrayDatosGrilla = [];\r\n            \r\n            let arrayTitulos = ['Fecha Documento','N Factura','Nombre Cliente','Tipo Factura','Codigo','Rut','Total Neto','IVA','Total'];\r\n\r\n            for (let i = 0; i < dataVentas.length; i++) {\r\n              let newFecha = new Date(dataVentas[i]['fechaDocumento']);\r\n              newFecha = moment(newFecha).format('DD/MM/YYYY');\r\n              \r\n              newArrayDatosGrilla.push({\r\n                \r\n                fechaDocumento : newFecha,\r\n                numeroFactura : dataVentas[i]['numeroFactura'],\r\n                nombreCliente : dataVentas[i]['nombreCliente'],\r\n                nombreTipoFactura : dataVentas[i]['nombreTipoFactura'],\r\n                codigo : dataVentas[i]['codigo'],\r\n                rut : dataVentas[i]['rut'],\r\n                totalNeto : dataVentas[i]['totalNeto'],\r\n                IVA : dataVentas[i]['IVA'],\r\n                total : dataVentas[i]['total']\r\n              });\r\n              newArrayDatosExcel.push(newFecha);\r\n              newArrayDatosExcel.push(dataVentas[i]['numeroFactura']);\r\n              newArrayDatosExcel.push(dataVentas[i]['nombreCliente']);\r\n              newArrayDatosExcel.push(dataVentas[i]['nombreTipoFactura']);\r\n              newArrayDatosExcel.push(dataVentas[i]['codigo']);\r\n              newArrayDatosExcel.push(dataVentas[i]['rut']);\r\n              newArrayDatosExcel.push(dataVentas[i]['totalNeto']);\r\n              newArrayDatosExcel.push(dataVentas[i]['IVA']);\r\n              newArrayDatosExcel.push(dataVentas[i]['total']);\r\n            }\r\n            //console.log(newArrayDatos);\r\n            this.setState({ titulos : arrayTitulos });\r\n            this.setState({ data : newArrayDatosGrilla });\r\n            this.setState({ dataExcel : newArrayDatosExcel});\r\n            this.setState({isExcel: true});\r\n        }else{\r\n            \r\n        }\r\n    })\r\n  }\r\n\r\n  \r\n  render() {\r\n\r\n    let filteredData = this.state.data;\r\n\r\n    //Agregamos las columnas a la tabla.\r\n    \r\n    const columns = [\r\n      { title: \"Fecha Documento\", field: \"fechaDocumento\", width: \"9%\"},\r\n      { title: \"N Factura\", field: \"numeroFactura\", width: \"15%\"},\r\n      { title: \"Nombre Cliente\", field: \"nombreCliente\", width: \"15%\"},\r\n      { title: \"Tipo Factura\", field: \"nombreTipoFactura\", width: \"15%\"},\r\n      { title: \"Codigo\", field: \"codigo\", width: \"15%\"},\r\n      { title: \"Rut\", field: \"rut\", width: \"15%\"},\r\n      { title: \"Total Neto\", field: \"totalNeto\", width: \"15%\"},\r\n      { title: \"IVA\", field: \"IVA\", width: \"15%\"},\r\n      { title: \"Total\", field: \"total\", width: \"15%\"}\r\n    ];\r\n    //Opciones de data table\r\n    const options = {\r\n      layout:\"id\",\r\n      width: \"100%\",\r\n      pagination:\"local\",\r\n      paginationSize:10,\r\n      movableColumns:true,\r\n      persistence:{\r\n        sort:true,\r\n        filter:true,\r\n        columns:true,\r\n      },\r\n      persistenceID:\"dataSave\"\r\n    };\r\n    return (\r\n        <div className=\"form-page\">\r\n            <div className = 'form-group'>\r\n                <div className = 'form-group'>\r\n                    <label>Fecha de Inico</label>\r\n                    <input onChange={e => this.change(e)} className= 'form-control' type = 'date' name='inicio' value= {this.state.ciudad}  />\r\n                </div>\r\n                <div className = 'form-group'>\r\n                    <label>Fecha de vencimiento</label>\r\n                    <input onChange={e => this.change(e)} className= 'form-control' type = 'date' name='final' value= {this.state.ciudad}  />\r\n                </div>\r\n                <div>\r\n                <button type = 'button' onClick ={this.consultaVentas} className = 'btn btn-primary'> Guardar </button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <React15Tabulator columns={columns} data={filteredData} options={options}/>\r\n            </div>\r\n            <div>\r\n              <button onClick={exExcelTes(this.state.titulos, this.state.dataExcel)}></button>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListaPagos;"]},"metadata":{},"sourceType":"module"}