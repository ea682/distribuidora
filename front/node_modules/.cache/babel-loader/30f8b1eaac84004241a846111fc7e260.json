{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erika\\\\Desktop\\\\proyectos\\\\Casa\\\\distribuidora\\\\front\\\\src\\\\Components\\\\Home\\\\Factura\\\\ListFactura.js\";\nimport React from \"react\";\nimport api from '../../config/Api';\nimport \"react-tabulator/lib/css/bootstrap/tabulator_bootstrap.min.css\";\nimport { React15Tabulator } from \"react-tabulator\";\n\nclass ListaFactura extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: ''\n    };\n  } //Cargamos los datos de la tabla.\n\n\n  componentDidMount() {\n    fetch(api + '/api/factura').then(response => {\n      return response.json();\n    }).then(datos => {\n      datos = datos.factura;\n      let row = [];\n\n      for (let i = 0; i < datos.length; i++) {\n        let newFecha = new Date(dataVentas[i]['fechaDocumento']);\n        newFecha = moment(newFecha).format('DD/MM/YYYY'); //Guardamos los datos en un array\n\n        row.push({\n          id: datos[i]['id'],\n          rut: datos[i]['rut'],\n          nombreCliente: datos[i]['nombrecliente'],\n          direccion: datos[i]['direccion'],\n          giro: datos[i]['giro'],\n          rutVendedor: datos[i]['rutVendedor'],\n          telefono: datos[i]['telefono'],\n          nombreTipoFactura: datos[i]['nombretipofactura'],\n          nFactura: datos[i]['nFactura'],\n          fechaDocumento: datos[i]['fechadocumento'],\n          codigo: datos[i]['codigo'],\n          descripcion: datos[i]['descripcion'],\n          cantidad: datos[i]['cantidad'],\n          precioUnitario: datos[i]['preciounitario'],\n          totalUnitario: datos[i]['totalUnitario'],\n          totalBruto: datos[i]['totalBruto']\n        });\n      }\n\n      this.setState({\n        data: row\n      });\n    });\n  }\n\n  render() {\n    //Agregamos las columnas a la tabla.\n    const columns = [{\n      title: \"Acciones\",\n      field: \"id\",\n      width: \"20%\",\n      align: \"center\",\n      formatter: function (cell) {\n        let value = cell.getValue();\n        return \"<button  type='button' class='btn btn-danger btn-sm'>Eliminar</button>  <button  type='button' class='btn btn-success btn-sm'>Guardar</button>\";\n      }\n    }, {\n      title: \"RUT\",\n      field: \"rut\",\n      width: \"9%\",\n      headerFilter: \"input\"\n    }, {\n      title: \"Nombre Cliente\",\n      field: \"nombreCliente\",\n      width: \"15%\",\n      editor: true,\n      headerFilter: \"input\"\n    }, {\n      title: \"Direccion Cliente\",\n      field: \"direccion\",\n      width: \"15%\",\n      editor: true\n    }, {\n      title: \"GIRO\",\n      field: \"giro\",\n      width: \"7%\",\n      editor: true,\n      headerFilter: \"input\"\n    }, {\n      title: \"Codigo Vendedor\",\n      field: \"rutVendedor\",\n      width: \"7%\",\n      editor: true,\n      headerFilter: \"input\"\n    }, {\n      title: \"Telefono\",\n      field: \"telefono\",\n      width: \"10%\",\n      editor: true\n    }, {\n      title: \"Nombre DOC\",\n      field: \"nombreTipoFactura\",\n      width: \"10%\",\n      editor: true,\n      headerFilter: \"input\"\n    }, {\n      title: \"Numero DOC\",\n      field: \"nFactura\",\n      width: \"10%\",\n      editor: true,\n      headerFilter: \"input\"\n    }, {\n      title: \"Fecha Documento\",\n      field: \"fechaDocumento\",\n      width: \"10%\",\n      editor: true,\n      headerFilter: \"input\"\n    }, {\n      title: \"COD. Producto\",\n      field: \"codigo\",\n      width: \"10%\",\n      editor: true,\n      headerFilter: \"input\"\n    }, {\n      title: \"Desc. Producto\",\n      field: \"descripcion\",\n      width: \"10%\",\n      editor: true,\n      headerFilter: \"input\"\n    }, {\n      title: \"Cantidad\",\n      field: \"cantidad\",\n      width: \"8%\",\n      editor: true,\n      headerFilter: \"input\"\n    }, {\n      title: \"Precio Unitario\",\n      field: \"precioUnitario\",\n      width: \"10%\",\n      editor: true,\n      headerFilter: \"input\"\n    }, {\n      title: \"Total Linea\",\n      field: \"totalUnitario\",\n      width: \"10%\",\n      editor: true\n    }, {\n      title: \"Total Bruto\",\n      field: \"totalBruto\",\n      width: \"10%\",\n      editor: true\n    }]; //Opciones de data table\n\n    const options = {\n      layout: \"id\",\n      width: \"100%\",\n      pagination: \"local\",\n      paginationSize: 30,\n      movableColumns: true,\n      persistence: {\n        sort: true,\n        filter: true,\n        columns: true\n      },\n      persistenceID: \"dataSave\"\n    };\n\n    try {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(React15Tabulator, {\n        columns: columns,\n        data: this.state.data,\n        options: options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }));\n    } catch (error) {\n      console.log(\"------------------------------------------------------\");\n      console.log(error);\n    }\n  }\n\n}\n\nexport default ListaFactura;","map":{"version":3,"sources":["C:/Users/erika/Desktop/proyectos/Casa/distribuidora/front/src/Components/Home/Factura/ListFactura.js"],"names":["React","api","React15Tabulator","ListaFactura","Component","constructor","props","state","data","componentDidMount","fetch","then","response","json","datos","factura","row","i","length","newFecha","Date","dataVentas","moment","format","push","id","rut","nombreCliente","direccion","giro","rutVendedor","telefono","nombreTipoFactura","nFactura","fechaDocumento","codigo","descripcion","cantidad","precioUnitario","totalUnitario","totalBruto","setState","render","columns","title","field","width","align","formatter","cell","value","getValue","headerFilter","editor","options","layout","pagination","paginationSize","movableColumns","persistence","sort","filter","persistenceID","error","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport api from '../../config/Api';\r\nimport \"react-tabulator/lib/css/bootstrap/tabulator_bootstrap.min.css\";\r\nimport { React15Tabulator } from \"react-tabulator\";\r\n\r\n\r\n\r\n\r\nclass ListaFactura extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: ''}\r\n  }\r\n\r\n  //Cargamos los datos de la tabla.\r\n  componentDidMount(){\r\n    \r\n    fetch(api+'/api/factura')\r\n      .then((response) => {\r\n        return response.json()\r\n      })\r\n      .then((datos) => {\r\n        datos = datos.factura;\r\n        let row = [];\r\n        for (let i = 0; i < datos.length; i++) {\r\n\r\n            let newFecha = new Date(dataVentas[i]['fechaDocumento']);\r\n            newFecha = moment(newFecha).format('DD/MM/YYYY');\r\n            //Guardamos los datos en un array\r\n            row.push({ \r\n                id: datos[i]['id'],\r\n                rut: datos[i]['rut'],\r\n                nombreCliente: datos[i]['nombrecliente'],\r\n                direccion: datos[i]['direccion'],\r\n                giro: datos[i]['giro'],\r\n                rutVendedor: datos[i]['rutVendedor'],\r\n                telefono: datos[i]['telefono'],\r\n                nombreTipoFactura: datos[i]['nombretipofactura'],\r\n                nFactura: datos[i]['nFactura'],\r\n                fechaDocumento: datos[i]['fechadocumento'],\r\n                codigo: datos[i]['codigo'],\r\n                descripcion: datos[i]['descripcion'],\r\n                cantidad: datos[i]['cantidad'],\r\n                precioUnitario: datos[i]['preciounitario'],\r\n                totalUnitario: datos[i]['totalUnitario'],\r\n                totalBruto: datos[i]['totalBruto']\r\n            });\r\n        }\r\n        this.setState({ data: row })\r\n      });\r\n    \r\n  }\r\n  render() {\r\n    //Agregamos las columnas a la tabla.\r\n    const columns = [\r\n      { title: \"Acciones\", field: \"id\", width: \"20%\", align:\"center\", formatter:function(cell){\r\n        let value = cell.getValue();\r\n        return \"<button  type='button' class='btn btn-danger btn-sm'>Eliminar</button>  <button  type='button' class='btn btn-success btn-sm'>Guardar</button>\";\r\n      }},\r\n      { title: \"RUT\", field: \"rut\", width: \"9%\", headerFilter:\"input\"},\r\n      { title: \"Nombre Cliente\", field: \"nombreCliente\", width: \"15%\", editor:true, headerFilter:\"input\"},\r\n      { title: \"Direccion Cliente\", field: \"direccion\", width: \"15%\", editor:true},\r\n      { title: \"GIRO\", field: \"giro\", width: \"7%\", editor:true, headerFilter:\"input\"},\r\n      { title: \"Codigo Vendedor\", field: \"rutVendedor\", width: \"7%\", editor:true, headerFilter:\"input\"},\r\n      { title: \"Telefono\", field: \"telefono\", width: \"10%\", editor:true},\r\n      { title: \"Nombre DOC\", field: \"nombreTipoFactura\", width: \"10%\", editor:true, headerFilter:\"input\"},\r\n      { title: \"Numero DOC\", field: \"nFactura\", width: \"10%\", editor:true, headerFilter:\"input\"},\r\n      { title: \"Fecha Documento\", field: \"fechaDocumento\", width: \"10%\", editor:true, headerFilter:\"input\"},\r\n      { title: \"COD. Producto\", field: \"codigo\", width: \"10%\", editor:true, headerFilter:\"input\"},\r\n      { title: \"Desc. Producto\", field: \"descripcion\", width: \"10%\", editor:true, headerFilter:\"input\"},\r\n      { title: \"Cantidad\", field: \"cantidad\", width: \"8%\", editor:true, headerFilter:\"input\"},\r\n      { title: \"Precio Unitario\", field: \"precioUnitario\", width: \"10%\", editor:true, headerFilter:\"input\"},\r\n      { title: \"Total Linea\", field: \"totalUnitario\", width: \"10%\", editor:true},\r\n      { title: \"Total Bruto\", field: \"totalBruto\", width: \"10%\", editor:true}\r\n    ];\r\n    //Opciones de data table\r\n    const options = {\r\n      layout:\"id\",\r\n      width: \"100%\",\r\n      pagination:\"local\",\r\n      paginationSize:30,\r\n      movableColumns:true,\r\n      persistence:{\r\n        sort:true,\r\n        filter:true,\r\n        columns:true,\r\n      },\r\n      persistenceID:\"dataSave\"\r\n    };\r\n    try {\r\n      return (\r\n        <div>\r\n          <React15Tabulator columns={columns} data={this.state.data} options={options}/>\r\n        </div>\r\n      );\r\n    } catch (error) {\r\n      console.log(\"------------------------------------------------------\");\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\nexport default ListaFactura;\r\n"]},"metadata":{},"sourceType":"module"}